{"version":3,"file":"index10.js","sources":["../../../../src/lib/apis/audio/index.ts"],"sourcesContent":["import { AUDIO_API_BASE_URL } from '$lib/constants';\n\nexport const getAudioConfig = async (token: string) => {\n\tlet error = null;\n\n\tconst res = await fetch(`${AUDIO_API_BASE_URL}/config`, {\n\t\tmethod: 'GET',\n\t\theaders: {\n\t\t\t'Content-Type': 'application/json',\n\t\t\tAuthorization: `Bearer ${token}`\n\t\t}\n\t})\n\t\t.then(async (res) => {\n\t\t\tif (!res.ok) throw await res.json();\n\t\t\treturn res.json();\n\t\t})\n\t\t.catch((err) => {\n\t\t\tconsole.error(err);\n\t\t\terror = err.detail;\n\t\t\treturn null;\n\t\t});\n\n\tif (error) {\n\t\tthrow error;\n\t}\n\n\treturn res;\n};\n\ntype OpenAIConfigForm = {\n\turl: string;\n\tkey: string;\n\tmodel: string;\n\tspeaker: string;\n};\n\nexport const updateAudioConfig = async (token: string, payload: OpenAIConfigForm) => {\n\tlet error = null;\n\n\tconst res = await fetch(`${AUDIO_API_BASE_URL}/config/update`, {\n\t\tmethod: 'POST',\n\t\theaders: {\n\t\t\t'Content-Type': 'application/json',\n\t\t\tAuthorization: `Bearer ${token}`\n\t\t},\n\t\tbody: JSON.stringify({\n\t\t\t...payload\n\t\t})\n\t})\n\t\t.then(async (res) => {\n\t\t\tif (!res.ok) throw await res.json();\n\t\t\treturn res.json();\n\t\t})\n\t\t.catch((err) => {\n\t\t\tconsole.error(err);\n\t\t\terror = err.detail;\n\t\t\treturn null;\n\t\t});\n\n\tif (error) {\n\t\tthrow error;\n\t}\n\n\treturn res;\n};\n\nexport const transcribeAudio = async (token: string, file: File, language?: string) => {\n\tconst data = new FormData();\n\tdata.append('file', file);\n\tif (language) {\n\t\tdata.append('language', language);\n\t}\n\n\tlet error = null;\n\tconst res = await fetch(`${AUDIO_API_BASE_URL}/transcriptions`, {\n\t\tmethod: 'POST',\n\t\theaders: {\n\t\t\tAccept: 'application/json',\n\t\t\tauthorization: `Bearer ${token}`\n\t\t},\n\t\tbody: data\n\t})\n\t\t.then(async (res) => {\n\t\t\tif (!res.ok) throw await res.json();\n\t\t\treturn res.json();\n\t\t})\n\t\t.catch((err) => {\n\t\t\terror = err.detail;\n\t\t\tconsole.error(err);\n\t\t\treturn null;\n\t\t});\n\n\tif (error) {\n\t\tthrow error;\n\t}\n\n\treturn res;\n};\n\nexport const synthesizeOpenAISpeech = async (\n\ttoken: string = '',\n\tspeaker: string = 'alloy',\n\ttext: string = '',\n\tmodel?: string\n) => {\n\tlet error = null;\n\n\tconst res = await fetch(`${AUDIO_API_BASE_URL}/speech`, {\n\t\tmethod: 'POST',\n\t\theaders: {\n\t\t\tAuthorization: `Bearer ${token}`,\n\t\t\t'Content-Type': 'application/json'\n\t\t},\n\t\tbody: JSON.stringify({\n\t\t\tinput: text,\n\t\t\tvoice: speaker,\n\t\t\t...(model && { model })\n\t\t})\n\t})\n\t\t.then(async (res) => {\n\t\t\tif (!res.ok) throw await res.json();\n\t\t\treturn res;\n\t\t})\n\t\t.catch((err) => {\n\t\t\terror = err.detail;\n\t\t\tconsole.error(err);\n\n\t\t\treturn null;\n\t\t});\n\n\tif (error) {\n\t\tthrow error;\n\t}\n\n\treturn res;\n};\n\ninterface AvailableModelsResponse {\n\tmodels: { name: string; id: string }[] | { id: string }[];\n}\n\nexport const getModels = async (token: string = ''): Promise<AvailableModelsResponse> => {\n\tlet error = null;\n\n\tconst res = await fetch(`${AUDIO_API_BASE_URL}/models`, {\n\t\tmethod: 'GET',\n\t\theaders: {\n\t\t\t'Content-Type': 'application/json',\n\t\t\tAuthorization: `Bearer ${token}`\n\t\t}\n\t})\n\t\t.then(async (res) => {\n\t\t\tif (!res.ok) throw await res.json();\n\t\t\treturn res.json();\n\t\t})\n\t\t.catch((err) => {\n\t\t\terror = err.detail;\n\t\t\tconsole.error(err);\n\n\t\t\treturn null;\n\t\t});\n\n\tif (error) {\n\t\tthrow error;\n\t}\n\n\treturn res;\n};\n\nexport const getVoices = async (token: string = '') => {\n\tlet error = null;\n\n\tconst res = await fetch(`${AUDIO_API_BASE_URL}/voices`, {\n\t\tmethod: 'GET',\n\t\theaders: {\n\t\t\t'Content-Type': 'application/json',\n\t\t\tAuthorization: `Bearer ${token}`\n\t\t}\n\t})\n\t\t.then(async (res) => {\n\t\t\tif (!res.ok) throw await res.json();\n\t\t\treturn res.json();\n\t\t})\n\t\t.catch((err) => {\n\t\t\terror = err.detail;\n\t\t\tconsole.error(err);\n\n\t\t\treturn null;\n\t\t});\n\n\tif (error) {\n\t\tthrow error;\n\t}\n\n\treturn res;\n};\n"],"names":["res"],"mappings":";AAkEO,MAAM,kBAAkB,OAAO,OAAe,MAAY,aAAsB;AAChF,QAAA,OAAO,IAAI;AACZ,OAAA,OAAO,QAAQ,IAAI;AACxB,MAAI,UAAU;AACR,SAAA,OAAO,YAAY,QAAQ;AAAA,EACjC;AAEA,MAAI,QAAQ;AACZ,QAAM,MAAM,MAAM,MAAM,GAAG,kBAAkB,mBAAmB;AAAA,IAC/D,QAAQ;AAAA,IACR,SAAS;AAAA,MACR,QAAQ;AAAA,MACR,eAAe,UAAU,KAAK;AAAA,IAC/B;AAAA,IACA,MAAM;AAAA,EAAA,CACN,EACC,KAAK,OAAOA,SAAQ;AACpB,QAAI,CAACA,KAAI,GAAU,OAAA,MAAMA,KAAI,KAAK;AAClC,WAAOA,KAAI;EAAK,CAChB,EACA,MAAM,CAAC,QAAQ;AACf,YAAQ,IAAI;AACZ,YAAQ,MAAM,GAAG;AACV,WAAA;AAAA,EAAA,CACP;AAEF,MAAI,OAAO;AACJ,UAAA;AAAA,EACP;AAEO,SAAA;AACR;AAEa,MAAA,yBAAyB,OACrC,QAAgB,IAChB,UAAkB,SAClB,OAAe,IACf,UACI;AACJ,MAAI,QAAQ;AAEZ,QAAM,MAAM,MAAM,MAAM,GAAG,kBAAkB,WAAW;AAAA,IACvD,QAAQ;AAAA,IACR,SAAS;AAAA,MACR,eAAe,UAAU,KAAK;AAAA,MAC9B,gBAAgB;AAAA,IACjB;AAAA,IACA,MAAM,KAAK,UAAU;AAAA,MACpB,OAAO;AAAA,MACP,OAAO;AAAA,MACP,GAAI;AAAA,IAAiB,CACrB;AAAA,EAAA,CACD,EACC,KAAK,OAAOA,SAAQ;AACpB,QAAI,CAACA,KAAI,GAAU,OAAA,MAAMA,KAAI,KAAK;AAC3BA,WAAAA;AAAAA,EAAA,CACP,EACA,MAAM,CAAC,QAAQ;AACf,YAAQ,IAAI;AACZ,YAAQ,MAAM,GAAG;AAEV,WAAA;AAAA,EAAA,CACP;AAEF,MAAI,OAAO;AACJ,UAAA;AAAA,EACP;AAEO,SAAA;AACR;"}