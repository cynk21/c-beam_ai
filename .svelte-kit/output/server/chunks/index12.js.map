{"version":3,"file":"index12.js","sources":["../../../../src/lib/apis/notes/index.ts"],"sourcesContent":["import { WEBUI_API_BASE_URL } from '$lib/constants';\nimport { getTimeRange } from '$lib/utils';\n\ntype NoteItem = {\n\ttitle: string;\n\tdata: object;\n\tmeta?: null | object;\n\taccess_control?: null | object;\n};\n\nexport const createNewNote = async (token: string, note: NoteItem) => {\n\tlet error = null;\n\n\tconst res = await fetch(`${WEBUI_API_BASE_URL}/notes/create`, {\n\t\tmethod: 'POST',\n\t\theaders: {\n\t\t\tAccept: 'application/json',\n\t\t\t'Content-Type': 'application/json',\n\t\t\tauthorization: `Bearer ${token}`\n\t\t},\n\t\tbody: JSON.stringify({\n\t\t\t...note\n\t\t})\n\t})\n\t\t.then(async (res) => {\n\t\t\tif (!res.ok) throw await res.json();\n\t\t\treturn res.json();\n\t\t})\n\t\t.catch((err) => {\n\t\t\terror = err.detail;\n\t\t\tconsole.error(err);\n\t\t\treturn null;\n\t\t});\n\n\tif (error) {\n\t\tthrow error;\n\t}\n\n\treturn res;\n};\n\nexport const getNotes = async (token: string = '') => {\n\tlet error = null;\n\n\tconst res = await fetch(`${WEBUI_API_BASE_URL}/notes/`, {\n\t\tmethod: 'GET',\n\t\theaders: {\n\t\t\tAccept: 'application/json',\n\t\t\t'Content-Type': 'application/json',\n\t\t\tauthorization: `Bearer ${token}`\n\t\t}\n\t})\n\t\t.then(async (res) => {\n\t\t\tif (!res.ok) throw await res.json();\n\t\t\treturn res.json();\n\t\t})\n\t\t.then((json) => {\n\t\t\treturn json;\n\t\t})\n\t\t.catch((err) => {\n\t\t\terror = err.detail;\n\t\t\tconsole.error(err);\n\t\t\treturn null;\n\t\t});\n\n\tif (error) {\n\t\tthrow error;\n\t}\n\n\tif (!Array.isArray(res)) {\n\t\treturn {}; // or throw new Error(\"Notes response is not an array\")\n\t}\n\n\t// Build the grouped object\n\tconst grouped: Record<string, any[]> = {};\n\tfor (const note of res) {\n\t\tconst timeRange = getTimeRange(note.updated_at / 1000000000);\n\t\tif (!grouped[timeRange]) {\n\t\t\tgrouped[timeRange] = [];\n\t\t}\n\t\tgrouped[timeRange].push({\n\t\t\t...note,\n\t\t\ttimeRange\n\t\t});\n\t}\n\n\treturn grouped;\n};\n\nexport const getNoteById = async (token: string, id: string) => {\n\tlet error = null;\n\n\tconst res = await fetch(`${WEBUI_API_BASE_URL}/notes/${id}`, {\n\t\tmethod: 'GET',\n\t\theaders: {\n\t\t\tAccept: 'application/json',\n\t\t\t'Content-Type': 'application/json',\n\t\t\tauthorization: `Bearer ${token}`\n\t\t}\n\t})\n\t\t.then(async (res) => {\n\t\t\tif (!res.ok) throw await res.json();\n\t\t\treturn res.json();\n\t\t})\n\t\t.then((json) => {\n\t\t\treturn json;\n\t\t})\n\t\t.catch((err) => {\n\t\t\terror = err.detail;\n\n\t\t\tconsole.error(err);\n\t\t\treturn null;\n\t\t});\n\n\tif (error) {\n\t\tthrow error;\n\t}\n\n\treturn res;\n};\n\nexport const updateNoteById = async (token: string, id: string, note: NoteItem) => {\n\tlet error = null;\n\n\tconst res = await fetch(`${WEBUI_API_BASE_URL}/notes/${id}/update`, {\n\t\tmethod: 'POST',\n\t\theaders: {\n\t\t\tAccept: 'application/json',\n\t\t\t'Content-Type': 'application/json',\n\t\t\tauthorization: `Bearer ${token}`\n\t\t},\n\t\tbody: JSON.stringify({\n\t\t\t...note\n\t\t})\n\t})\n\t\t.then(async (res) => {\n\t\t\tif (!res.ok) throw await res.json();\n\t\t\treturn res.json();\n\t\t})\n\t\t.then((json) => {\n\t\t\treturn json;\n\t\t})\n\t\t.catch((err) => {\n\t\t\terror = err.detail;\n\n\t\t\tconsole.error(err);\n\t\t\treturn null;\n\t\t});\n\n\tif (error) {\n\t\tthrow error;\n\t}\n\n\treturn res;\n};\n\nexport const deleteNoteById = async (token: string, id: string) => {\n\tlet error = null;\n\n\tconst res = await fetch(`${WEBUI_API_BASE_URL}/notes/${id}/delete`, {\n\t\tmethod: 'DELETE',\n\t\theaders: {\n\t\t\tAccept: 'application/json',\n\t\t\t'Content-Type': 'application/json',\n\t\t\tauthorization: `Bearer ${token}`\n\t\t}\n\t})\n\t\t.then(async (res) => {\n\t\t\tif (!res.ok) throw await res.json();\n\t\t\treturn res.json();\n\t\t})\n\t\t.then((json) => {\n\t\t\treturn json;\n\t\t})\n\t\t.catch((err) => {\n\t\t\terror = err.detail;\n\n\t\t\tconsole.error(err);\n\t\t\treturn null;\n\t\t});\n\n\tif (error) {\n\t\tthrow error;\n\t}\n\n\treturn res;\n};\n"],"names":["res"],"mappings":"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"}